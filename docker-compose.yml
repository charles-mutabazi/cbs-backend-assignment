services:
  car_booking_api:
    env_file:
      - .env
    build: .
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/usr/src/app/src

  postgres:
    restart: always
    env_file:
      - .env
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: car_booking_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d car_booking_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: ["npx", "prisma", "db", "push", "--accept-data-loss"]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    entrypoint: ["sh", "-c", "npx prisma db push"]

volumes:
  postgres_data: